{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAiB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEjD,SAAS,EAAS,CAAG,EACnB,OAAO,SAAS,EAAI,OAAO,CAAC,UAAW,IACzC,CAqBA,SAAS,EAAa,CAAI,EACxB,OAAO,EAAK,GAAG,CAAC,SAAC,CAAjB,EACE,IAAM,EAAgB,EAAE,WAAW,CAAC,IAAI,GAClC,EAAY,EAAE,YAAY,CAAC,eAEjC,MAAO,CACL,KAAM,EACN,SAAU,EAAE,YAAY,CAAC,iBACzB,OAAQ,WAAW,EAAU,OAAO,CAAC,aAAc,KACnD,IAAK,EAAE,YAAY,CAAC,WACtB,CACF,EACF,EAEA,AAjCA,SAAkB,CAAI,EACpB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,OACE,EAAS,EAAE,YAAY,CAAC,gBACxB,EAAS,EAAE,YAAY,CAAC,eAE5B,GAIA,IAFA,IAAM,EAAW,SAAS,aAAa,CAAC,MAEjC,EAAS,UAAU,EACxB,EAAS,WAAW,CAAC,EAAS,UAAU,EAG1C,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAS,WAAW,CAAC,EACvB,EACF,EAgBS,GAET,EAAa,GAIb,AAFoB,EAAa,GAErB,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EAA2B,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,AAE9C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar salaryList = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction strToNum(str) {\n    return parseInt(str.replace(/[^0-9]/g, \"\"));\n}\nfunction sortList(list) {\n    list.sort(function(a, b) {\n        return strToNum(b.getAttribute(\"data-salary\")) - strToNum(a.getAttribute(\"data-salary\"));\n    });\n    var parentEl = document.querySelector(\"ul\");\n    while(parentEl.firstChild)parentEl.removeChild(parentEl.firstChild);\n    list.forEach(function(item) {\n        parentEl.appendChild(item);\n    });\n}\nfunction getEmployees(list) {\n    return list.map(function(a) {\n        var employeesName = a.textContent.trim();\n        var salaryStr = a.getAttribute(\"data-salary\");\n        return {\n            name: employeesName,\n            position: a.getAttribute(\"data-position\"),\n            salary: parseFloat(salaryStr.replace(/[^0-9.-]+/g, \"\")),\n            age: a.getAttribute(\"data-age\")\n        };\n    });\n}\nsortList(salaryList);\ngetEmployees(salaryList);\nvar arraySorted = getEmployees(salaryList);\narraySorted.sort(function(a, b) {\n    return b.salary - a.salary;\n}); // to see sorted Array => console.log(arraySorted)\n\n//# sourceMappingURL=index.945ebd72.js.map\n","'use strict';\n\nconst salaryList = [...document.querySelectorAll('li')];\n\nfunction strToNum(str) {\n  return parseInt(str.replace(/[^0-9]/g, ''));\n}\n\nfunction sortList(list) {\n  list.sort((a, b) => {\n    return (\n      strToNum(b.getAttribute('data-salary')) -\n      strToNum(a.getAttribute('data-salary'))\n    );\n  });\n\n  const parentEl = document.querySelector('ul');\n\n  while (parentEl.firstChild) {\n    parentEl.removeChild(parentEl.firstChild);\n  }\n\n  list.forEach((item) => {\n    parentEl.appendChild(item);\n  });\n}\n\nfunction getEmployees(list) {\n  return list.map((a) => {\n    const employeesName = a.textContent.trim();\n    const salaryStr = a.getAttribute('data-salary');\n\n    return {\n      name: employeesName,\n      position: a.getAttribute('data-position'),\n      salary: parseFloat(salaryStr.replace(/[^0-9.-]+/g, '')),\n      age: a.getAttribute('data-age'),\n    };\n  });\n}\n\nsortList(salaryList);\n\ngetEmployees(salaryList);\n\nconst arraySorted = getEmployees(salaryList);\n\narraySorted.sort((a, b) => b.salary - a.salary);\n\n// to see sorted Array => console.log(arraySorted)\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","salaryList","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","strToNum","str","parseInt","replace","getEmployees","list","map","a","employeesName","textContent","trim","salaryStr","getAttribute","position","salary","parseFloat","age","sortList","sort","b","parentEl","querySelector","firstChild","removeChild","forEach","item","appendChild","arraySorted"],"version":3,"file":"index.945ebd72.js.map"}